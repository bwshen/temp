{"mappings":"C,A,S,C,C,C,C,C,C,C,C,C,E,I,E,A,a,O,W,W,A,a,O,K,K,A,a,O,O,O,A,a,O,O,O,C,E,E,A,Y,O,C,C,E,E,C,C,E,C,E,E,K,E,C,E,E,A,a,O,Q,A,Y,O,O,O,E,O,O,C,I,C,Q,S,E,C,C,C,E,G,C,C,C,E,C,C,G,C,C,C,E,C,C,I,E,A,Y,O,C,C,E,E,C,C,E,C,G,C,G,E,O,E,E,C,G,G,E,O,E,E,C,G,G,G,A,U,O,E,O,E,G,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,O,C,S,C,E,I,E,C,C,E,C,E,C,E,C,O,A,M,E,E,C,E,E,K,C,C,E,I,E,C,C,E,C,I,E,M,C,G,C,C,E,C,E,C,I,C,E,O,C,E,E,E,O,C,I,C,C,O,C,C,E,C,O,C,S,E,C,E,I,E,E,O,C,G,M,A,C,I,E,C,E,E,E,C,C,E,e,C,C,E,E,M,C,S,C,E,I,C,E,C,E,I,C,M,C,E,I,C,O,C,C,C,E,E,O,C,E,E,K,C,E,E,M,C,E,E,Q,C,S,C,C,C,E,C,C,E,C,C,S,C,C,C,E,E,O,C,C,E,C,E,A,E,O,c,C,E,O,C,I,W,O,C,C,E,A,C,G,C,C,E,C,E,I,I,E,E,E,E,M,C,I,E,C,C,E,C,E,C,M,C,S,C,C,C,C,C,E,I,E,E,kD,E,iB,C,GC2FwB,EAAA,MAAA,CAAA,EAAA,UAAA,IAAA,G,I,E,E,qBA3FxB,EAAA,EAAA,SACA,EAAA,EAAA,eACA,EAAA,EAAA,oBAEA,EAAA,EAAA,2C,E,E,c,C,GAIA,EAAA,EAAA,gD,E,E,c,C,GACA,EAAA,EAAA,mBACA,EAAA,EAAA,yB,E,E,c,C,GACA,EAAA,EAAA,qC,E,E,c,C,GACA,EAAA,EAAA,kC,E,E,c,C,GACA,EAAA,EAAA,8B,E,E,c,C,GACA,EAAA,EAAA,sC,E,E,c,C,GACA,EAAA,EAAA,oC,E,E,c,C,GACA,EAAA,EAAA,+B,E,E,c,C,GACA,EAAA,EAAA,+B,E,E,c,C,GACA,EAAA,EAAA,wC,E,E,c,C,GACA,EAAA,EAAA,8B,E,E,c,C,GACA,EAAA,EAAA,2B,E,E,c,C,GACA,EAAA,EAAA,4B,E,E,c,C,GACA,EAAA,EAAA,qB,E,E,c,C,GAEA,EAAA,EAAA,gB,E,E,c,C,GAMA,IAAM,EAAW,AAAA,CAAA,EAAA,EAAA,OAAa,AAAb,EACf,CAAC,CAAE,UAAW,CAAE,SAAA,CAAQ,CAAE,CAAc,IACtC,GAAM,CAAE,KAAA,CAAI,CAAE,CAAG,AAAA,CAAA,EAAA,EAAA,iBAAiB,AAAjB,EAA6B,EAAA,OAAe,CAAG,GAC1D,EAAM,EAAK,KAAK,CAAC,MAAM,CAAG,EAAI,EAAK,KAAK,CAAC,EAAE,CAAC,IAAI,CAAG,KAEnD,EAA0B,AAAA,CAAA,EAAA,EAAA,OAAkB,AAAlB,EAAoB,CAAE,IAAA,CAAI,GACpD,CACJ,uBAAA,CAAsB,CACtB,wBAAA,CAAuB,CACvB,eAAA,CAAc,CACd,kBAAA,CAAiB,CAClB,CAAG,AAAA,CAAA,EAAA,EAAA,OAAe,AAAf,EAAiB,GAQrB,GANA,AAAA,CAAA,EAAA,EAAA,SAAS,AAAT,EAAU,KACH,GAAK,UAAU,OAEpB,AAAA,CAAA,EAAA,EAAA,OAAU,AAAV,EAAY,CAAC,KAAK,EAAE,AAAA,CAAA,EAAA,EAAA,OAAiB,AAAjB,EAAkB,GAAK,GAAG,EAAE,EAAA,QAAO,CAAE,CAAC,CAC5D,EAAG,CAAC,EAAK,GAAK,UAAU,MAAM,EAE1B,CAAC,GAAO,CAAC,EAAyB,MAAM,IAAI,EAAA,OAAa,CAE7D,MACE,AAAA,CAAA,EAAA,EAAA,GAAA,AAAA,EAAC,EAAA,OAAsB,CADzB,CAEI,SAAA,AAAA,CAAA,EAAA,EAAA,GAAA,AAAA,EAAC,EAAA,OAAa,CAAd,CAAe,YAAa,EAAI,QAAQ,CACtC,SAAA,AAAA,CAAA,EAAA,EAAA,IAAA,AAAA,EAAA,EAAA,QAAA,CAAA,C,S,CACE,AAAA,CAAA,EAAA,EAAA,GAAA,AAAA,EAAC,EAAA,OAAW,CAAZ,CAAc,MAAO,AAAA,CAAA,EAAA,EAAA,OAAgB,AAAhB,EAAkB,E,GACvC,AAAA,CAAA,EAAA,EAAA,GAAA,AAAA,EAAC,EAAA,OAAmB,CAApB,CACE,OAAQ,EAAI,QAAQ,CAAC,MAAM,CAC3B,cAAe,EAAI,QAAQ,CAAC,aAAa,CACzC,WAAY,EAAI,QAAQ,CAAC,aAAa,A,GAExC,AAAA,CAAA,EAAA,EAAA,GAAA,AAAA,EAAC,EAAA,OAAY,CAAb,CACE,IAAK,EACL,eAAgB,EAChB,wBAAyB,EACzB,uBAAwB,EACxB,kBAAmB,EAEnB,SAAA,AAAA,CAAA,EAAA,EAAA,GAAA,AAAA,EAAC,EAAA,OAAU,CAAX,CAAY,IAAK,C,E,GAEnB,AAAA,CAAA,EAAA,EAAA,GAAA,AAAA,EAAC,EAAA,OAAkB,CAAnB,CACE,OAAQ,EAAI,QAAQ,CAAC,MAAM,CAC3B,cAAe,EAAI,QAAQ,CAAC,aAAa,A,GAE3C,AAAA,CAAA,EAAA,EAAA,GAAA,AAAA,EAAC,EAAA,OAAiB,CAAlB,CACE,MAAM,cACN,YAAa,EAAI,QAAQ,CAAC,WAAW,CACrC,YAAa,CAAA,EACb,SAAU,EAAI,QAAQ,CAAC,mBAAmB,CAC1C,qBAAsB,EAAI,QAAQ,CAAC,mBAAmB,A,G,A,E,E,EAMlE,EACA,CACE,UAAW,CAAE,gBAAiB,EAAA,OAAe,AAAE,CACjD,GAGa,SAAS,IACtB,GAAM,CAAE,QAAA,CAAO,CAAE,CAAG,AAAA,CAAA,EAAA,EAAA,SAAS,AAAT,IAEpB,MACE,AAAA,CAAA,EAAA,EAAA,GAAA,AAAA,EAAC,EAAA,OAAiB,CADpB,CAEI,SAAA,AAAA,CAAA,EAAA,EAAA,GAAA,AAAA,EAAC,EAAD,CAAU,UAAW,CAAE,UAAW,CAAE,MAAO,EAAG,YAAa,CAAQ,CAAE,C,E,EAG3E,C,E,C,oB,Q,M,Q,c,Q,mB,Q,0C,Q,+C,Q,kB,Q,wB,Q,oC,Q,iC,Q,6B,Q,qC,Q,mC,Q,8B,Q,8B,Q,uC,Q,6B,Q,0B,Q,2B,Q,oB,Q,e,Q,iD,O,E,C,M,C,S,C,C,C,C,C,E,I,E,E,kD,E,iB,C,GC7EwB,EAAA,MAAA,CAAA,EAAA,UAAA,IAAA,G,I,E,E,qBAtBxB,EAAA,EAAA,SAEA,EAAA,EAAA,gCAKA,EAAA,EAAA,2BAEA,EAAA,EAAA,2C,E,E,c,C,GACA,EAAA,EAAA,kC,E,E,c,C,GACA,EAAA,EAAA,uB,E,E,c,C,GACA,EAAA,EAAA,0B,E,E,c,C,GACA,EAAA,EAAA,0B,E,E,c,C,GAGA,EAAA,EAAA,gB,E,E,c,C,GAMe,SAAS,EAAW,CAAE,IAAA,CAAG,CAAmB,EACzD,GAAM,CAAC,EAAY,EAAc,CAAG,AAAA,CAAA,EAAA,EAAA,QAAQ,AAAR,EAAkB,CAAA,GAChD,CAAC,EAA2B,EAA6B,CAC7D,AAAA,CAAA,EAAA,EAAA,QAAQ,AAAR,EAAiB,MAEnB,MACE,AADF,CAAA,EAAA,EAAA,IAAA,AAAA,EAAA,EAAA,QAAA,CAAA,C,S,CAEK,CAAC,CAAC,GACD,AAAA,CAAA,EAAA,EAAA,GAAA,AAAA,EAAC,EAAA,OAAU,CADZ,CAEG,IAAK,EACL,QAAS,IAAM,EAAc,CAAA,GAC7B,YAAa,AAAC,IACZ,EAAc,CAAA,GACd,EAA6B,EAC/B,C,GAGH,CAAC,CAAC,GACD,AAAA,CAAA,EAAA,EAAA,GAAA,AAAA,EAAC,EAAA,OAAoB,CADtB,CAEG,KAAA,CAAA,EACA,MAAO,KACP,QAAS,IAAM,EAA6B,MAE5C,SAAA,AAAA,CAAA,EAAA,EAAA,IAAA,AAAA,EAAC,MAAD,CACE,UAAW,AAAA,CAAA,EAAA,EAAA,WAAW,AAAX,EACT,AAAA,EAAA,OAAQ,CAAE,IAAI,CAAC,WAAW,CAC1B,AAAA,EAAA,OAAM,AAAA,CAAC,GAAG,CACV,AAAA,EAAA,OAAS,CAAC,MAAM,CAAC,OAAO,E,S,CAG1B,AAAA,CAAA,EAAA,EAAA,GAAA,AAAA,EAAC,MAAD,CAAK,UAAW,AAAA,CAAA,EAAA,EAAA,WAAU,AAAV,EAAY,aAAc,AAAA,EAAA,OAAM,CAAE,SAAS,EAAG,SAAA,iB,GAI9D,AAAA,CAAA,EAAA,EAAA,GAAA,AAAA,EAAC,MAAD,CACE,UAAW,AAAA,CAAA,EAAA,EAAA,WAAU,AAAV,EACT,aACA,AAAA,EAAA,OAAO,CAAC,gBAAgB,CACxB,AAAA,EAAA,YAAW,CAAE,iBAAiB,EAEhC,MAAO,CAAE,SAAU,OAAQ,EAC5B,SAAA,gE,GAKD,AAAA,CAAA,EAAA,EAAA,GAAA,AAAA,EAAC,EAAA,cAAa,CAAd,CACE,UAAW,AAAA,EAAA,OAAQ,CAAE,GAAG,CAAC,GAAG,CAC5B,KAAK,QACL,GAAI,CAAE,SAAU,OAAQ,EACxB,QAAS,IAAM,EAA6B,MAC7C,SAAA,U,G,A,E,GAOP,AAAA,CAAA,EAAA,EAAA,GAAA,AAAA,EAAC,EAAA,OAAkB,CAAnB,CACE,UAAW,AAAA,EAAA,OAAQ,CAAE,MAAM,CAAC,GAAG,CAC/B,QAAS,IAAM,EAAc,CAAA,GAC7B,KAAK,QACN,SAAA,M,G,A,EAKP,C,E,C,oB,Q,M,Q,+B,Q,0B,Q,0C,Q,iC,Q,sB,Q,yB,Q,yB,Q,e,Q,iD,O,E,C,M,C,S,C,C,C,C,C,E,I,E,E,kD,E,iB,C,GCzDwB,EAAA,MAAA,CAAA,EAAA,UAAA,IAAA,G,I,E,E,qBAhCxB,EAAA,EAAA,SACA,EAAA,EAAA,UACA,EAAA,EAAA,oBAEA,EAAA,EAAA,gCAKA,EAAA,EAAA,2BAEA,EAAA,EAAA,qC,E,E,c,C,GAGA,EAAA,EAAA,iC,E,E,c,C,GACA,EAAA,EAAA,oB,E,E,c,C,GACA,EAAA,EAAA,oC,E,E,c,C,GACA,EAAA,EAAA,qCACA,EAAA,EAAA,uC,E,E,c,C,GACA,EAAA,EAAA,sD,E,E,c,C,GACA,EAAA,EAAA,uB,E,E,c,C,GACA,EAAA,EAAA,0B,E,E,c,C,GAEA,EAAA,EAAA,wBASe,SAAS,EAAW,CACjC,IAAA,CAAG,CACH,QAAA,CAAO,CACP,YAAA,CAAW,CACK,EAChB,GAAM,CAAC,EAAiB,EAAmB,CAAG,AAAA,CAAA,EAAA,EAAA,QAAQ,AAAR,EAAiB,IACzD,CAAC,EAAsB,EAAwB,CAAG,AAAA,CAAA,EAAA,EAAA,QAAQ,AAAR,EAAiB,IACnE,CAAC,EAAgB,EAAkB,CAAG,AAAA,CAAA,EAAA,EAAA,QAAQ,AAAR,EAAiB,IACvD,CAAC,EAAqB,EAAuB,CAAG,AAAA,CAAA,EAAA,EAAA,QAAQ,AAAR,EAAiB,IACjE,CAAC,EAAe,EAAiB,CAAG,AAAA,CAAA,EAAA,EAAA,QAAQ,AAAR,EAAiB,IACrD,CAAC,EAAW,EAAa,CAAG,AAAA,CAAA,EAAA,EAAA,QAAQ,AAAR,EAAkB,CAAA,GAC9C,CAAC,EAAiB,EAAmB,CAAG,AAAA,CAAA,EAAA,EAAA,QAAQ,AAAR,EAAiB,IACzD,EAAwB,AAAA,CAAA,EAAA,EAAA,wBAAwB,AAAxB,IAExB,EAAe,AAAA,CAAA,EAAA,EAAA,MAAM,AAAN,IAEf,CAAE,oBAAA,CAAmB,CAAE,CAAG,AAAA,CAAA,EAAA,EAAA,OAAgB,AAAhB,EAAiB,CAC/C,IAAK,KAAK,KAAK,CAAC,EAAI,QAAQ,CAAC,OAAO,EAAE,GAAG,CACzC,gBAAiB,EAAI,QAAQ,CAAC,OAAO,AACvC,GAEM,EAAuB,EAAoB,CAC/C,YAAa,EAAI,mBAAmB,CACpC,UAAW,EAAa,OAAO,CAC/B,QAAS,SAAS,EAAI,SAAS,CAAE,GACnC,GAEM,EAAqB,AAAA,CAAA,EAAA,EAAA,WAAU,AAAV,EACzB,AAAC,IACC,IAAM,EAAQ,EAAM,MAAM,CAAC,KAAK,CAAC,IAAI,GACjC,EAAQ,GACP,EAEO,AAAA,CAAA,EAAA,EAAA,MAAM,AAAN,EAAO,KAAK,CAAC,SAAS,CAAC,GAGjC,AAAA,CAAA,EAAA,EAAA,cAAa,AAAb,EAAe,EAAoB,EAAI,mBAAmB,GAE1D,CAAA,EAAQ,6BAHH,EADL,EAAQ,yBAFR,EAAQ,6BASV,EAAwB,GACxB,EAAmB,GAEd,GACH,CAAA,EAAa,OAAO,CAAG,CADzB,CAGF,EACA,CAAC,EAAI,mBAAmB,CAAC,EAErB,EAAoB,AAAA,CAAA,EAAA,EAAA,WAAU,AAAV,EACxB,AAAC,IACC,IAAM,EAAQ,EAAM,MAAM,CAAC,KAAK,CAAC,IAAI,GACjC,EAAQ,GACR,GAAS,CAAC,6BAA6B,IAAI,CAAC,IAC9C,CAAA,EAAQ,uBADV,EAIA,EAAuB,GACvB,EAAkB,EAAM,MAAM,CAAC,KAAK,CACtC,EACA,EAAE,EAEE,EAAe,AAAA,CAAA,EAAA,EAAA,WAAU,AAAV,EAAY,UAC/B,GAAI,CACF,EAAa,CAAA,GAOb,IAAM,EAAoB,MAAM,EAAqB,MAAM,CAAC,UAAU,GAOtE,EAAmB,EACrB,CAAE,MAAO,EAAG,CAEZ,CACA,EAAa,CAAA,EAEf,EAAG,CAAC,EAAqB,MAAM,CAAC,UAAU,CAAC,EAE3C,MACE,AAAA,CAAA,EAAA,EAAA,GAAA,AAAA,EAAC,EAAA,OAAc,CADjB,CAEI,MAAM,eACN,aACE,AAAC,EAeG,KAdF,AAAA,CAAA,EAAA,EAAA,GAAA,AAAA,EAAC,EAAA,OAAkB,CAFvB,CAGM,SACE,CAAC,CACC,CAAA,CAAC,GACD,GACA,GACA,CAAA,EAGJ,KAAK,QACL,QAAS,EACV,SAAA,MAGC,GAEN,QAAS,EAER,SAAA,EACC,AAAA,CAAA,EAAA,EAAA,GAAA,AAAA,EAAC,EAAA,OAAqB,CADvB,CAEG,eAAgB,CAAE,MAAO,CAAgB,EACzC,UAAW,IAAM,EAAY,EAE7B,GAAA,EAAsB,WAAW,CACnC,AAAA,CAAA,EAAA,EAAA,IAAA,AAAA,EAAC,MADC,CAEA,UAAW,AAAA,CAAA,EAAA,EAAA,WAAW,AAAX,EACT,AAAA,EAAA,OAAQ,CAAE,IAAI,CAAC,GAAG,CAClB,AAAA,EAAA,OAAS,CAAC,MAAM,CAAC,OAAO,CACxB,AAAA,EAAA,OAAK,AAAC,CAAC,GAAG,E,S,CAGZ,AAAA,CAAA,EAAA,EAAA,IAAA,AAAA,EAAC,MAAD,CAAK,UAAW,AAAA,CAAA,EAAA,EAAA,WAAU,AAAV,EAAY,AAAA,EAAA,OAAQ,CAAE,IAAI,CAAC,GAAG,CAAE,AAAA,EAAA,OAAK,AAAC,CAAC,GAAG,E,S,CACxD,AAAA,CAAA,EAAA,EAAA,GAAA,AAAA,EAAC,EAAA,iBAAgB,CAAjB,CACE,MAAM,6BACN,YAAY,iBACZ,MAAO,EACP,MAAO,EACP,SAAU,C,GAEZ,AAAA,CAAA,EAAA,EAAA,GAAA,AAAA,EAAC,EAAA,iBAAgB,CAAjB,CACE,MAAM,4BACN,YAAY,2BACZ,MAAO,EACP,MAAO,EACP,UAAW,AAAA,EAAA,OAAS,CAAC,MAAM,CAC3B,SAAU,C,GAEZ,AAAA,CAAA,EAAA,EAAA,GAAA,AAAA,EAAC,EAAA,iBAAgB,CAAjB,CACE,MAAM,4BACN,YAAY,yGACZ,MAAO,EACP,SAAU,AAAC,GAAU,EAAiB,EAAM,MAAM,CAAC,KAAK,EACxD,KAAK,OACL,QAAS,EACT,UAAW,AAAA,EAAA,OAAS,CAAC,MAAM,A,G,A,GAI/B,AAAA,CAAA,EAAA,EAAA,GAAA,AAAA,EAAC,EAAA,SAAQ,CAAT,CAAA,GAEA,AAAA,CAAA,EAAA,EAAA,IAAA,AAAA,EAAC,MAAD,CAAK,UAAW,AAAA,EAAA,OAAO,CAAC,cAAc,C,S,CAAE,+CACO,IAC7C,AAAA,CAAA,EAAA,EAAA,GAAA,AAAA,EAAC,EAAA,IAAG,CAAJ,CACE,GAAI,AAAA,CAAA,EAAA,EAAA,OAAK,AAAL,EAAO,GAAG,CAAC,oBAAoB,GACnC,eAAA,CAAA,EACA,OAAO,SACP,UAAU,cACX,SAAA,+B,G,A,G,AAML,GAAA,AAAA,CAAA,EAAA,EAAA,GAAA,AAAA,EAAC,EAAA,OAAe,CAAhB,CAAA,E,EAIR,C,E,C,oB,Q,M,Q,O,Q,mB,Q,+B,Q,0B,Q,oC,Q,gC,Q,mB,Q,mC,Q,oC,Q,sC,Q,qD,Q,sB,Q,yB,Q,uB,Q,iD,O,E,E,E,C,E","sources":["<anon>","src/pages/send/SendPage.tsx","src/pages/send/SendAction.tsx","src/pages/send/SendDialog.tsx"],"sourcesContent":["// modules are defined as an array\n// [ module function, map of requires ]\n//\n// map of requires is short require name -> numeric require\n//\n// anything defined in a previous bundle is accessed via the\n// orig method which is the require for previous bundles\n\n(function (modules, entry, mainEntry, parcelRequireName, globalName) {\n  /* eslint-disable no-undef */\n  var globalObject =\n    typeof globalThis !== 'undefined'\n      ? globalThis\n      : typeof self !== 'undefined'\n      ? self\n      : typeof window !== 'undefined'\n      ? window\n      : typeof global !== 'undefined'\n      ? global\n      : {};\n  /* eslint-enable no-undef */\n\n  // Save the require from previous bundle to this closure if any\n  var previousRequire =\n    typeof globalObject[parcelRequireName] === 'function' &&\n    globalObject[parcelRequireName];\n\n  var cache = previousRequire.cache || {};\n  // Do not use `require` to prevent Webpack from trying to bundle this call\n  var nodeRequire =\n    typeof module !== 'undefined' &&\n    typeof module.require === 'function' &&\n    module.require.bind(module);\n\n  function newRequire(name, jumped) {\n    if (!cache[name]) {\n      if (!modules[name]) {\n        // if we cannot find the module within our internal map or\n        // cache jump to the current global require ie. the last bundle\n        // that was added to the page.\n        var currentRequire =\n          typeof globalObject[parcelRequireName] === 'function' &&\n          globalObject[parcelRequireName];\n        if (!jumped && currentRequire) {\n          return currentRequire(name, true);\n        }\n\n        // If there are other bundles on this page the require from the\n        // previous one is saved to 'previousRequire'. Repeat this as\n        // many times as there are bundles until the module is found or\n        // we exhaust the require chain.\n        if (previousRequire) {\n          return previousRequire(name, true);\n        }\n\n        // Try the node require function if it exists.\n        if (nodeRequire && typeof name === 'string') {\n          return nodeRequire(name);\n        }\n\n        var err = new Error(\"Cannot find module '\" + name + \"'\");\n        err.code = 'MODULE_NOT_FOUND';\n        throw err;\n      }\n\n      localRequire.resolve = resolve;\n      localRequire.cache = {};\n\n      var module = (cache[name] = new newRequire.Module(name));\n\n      modules[name][0].call(\n        module.exports,\n        localRequire,\n        module,\n        module.exports,\n        this\n      );\n    }\n\n    return cache[name].exports;\n\n    function localRequire(x) {\n      var res = localRequire.resolve(x);\n      return res === false ? {} : newRequire(res);\n    }\n\n    function resolve(x) {\n      var id = modules[name][1][x];\n      return id != null ? id : x;\n    }\n  }\n\n  function Module(moduleName) {\n    this.id = moduleName;\n    this.bundle = newRequire;\n    this.exports = {};\n  }\n\n  newRequire.isParcelRequire = true;\n  newRequire.Module = Module;\n  newRequire.modules = modules;\n  newRequire.cache = cache;\n  newRequire.parent = previousRequire;\n  newRequire.register = function (id, exports) {\n    modules[id] = [\n      function (require, module) {\n        module.exports = exports;\n      },\n      {},\n    ];\n  };\n\n  Object.defineProperty(newRequire, 'root', {\n    get: function () {\n      return globalObject[parcelRequireName];\n    },\n  });\n\n  globalObject[parcelRequireName] = newRequire;\n\n  for (var i = 0; i < entry.length; i++) {\n    newRequire(entry[i]);\n  }\n\n  if (mainEntry) {\n    // Expose entry point to Node, AMD or browser globals\n    // Based on https://github.com/ForbesLindesay/umd/blob/master/template.js\n    var mainExports = newRequire(mainEntry);\n\n    // CommonJS\n    if (typeof exports === 'object' && typeof module !== 'undefined') {\n      module.exports = mainExports;\n\n      // RequireJS\n    } else if (typeof define === 'function' && define.amd) {\n      define(function () {\n        return mainExports;\n      });\n\n      // <script>\n    } else if (globalName) {\n      this[globalName] = mainExports;\n    }\n  }\n})({\"hgIYI\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"default\", ()=>SendPageWrapper);\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _react = require(\"react\");\nvar _reactRelay = require(\"react-relay\");\nvar _reactRouterDom = require(\"react-router-dom\");\nvar _nftsQueryGraphql = require(\"graphql/__generated__/NFTsQuery.graphql\");\nvar _nftsQueryGraphqlDefault = parcelHelpers.interopDefault(_nftsQueryGraphql);\nvar _pageErrorBoundary = require(\"components/ErrorBoundaries/PageErrorBoundary\");\nvar _pageErrorBoundaryDefault = parcelHelpers.interopDefault(_pageErrorBoundary);\nvar _utils = require(\"constants/Utils\");\nvar _fourOFourError = require(\"errors/FourOFourError\");\nvar _fourOFourErrorDefault = parcelHelpers.interopDefault(_fourOFourError);\nvar _useProductOwnership = require(\"hooks/product/useProductOwnership\");\nvar _useProductOwnershipDefault = parcelHelpers.interopDefault(_useProductOwnership);\nvar _useProductTimers = require(\"hooks/product/useProductTimers\");\nvar _useProductTimersDefault = parcelHelpers.interopDefault(_useProductTimers);\nvar _aboutArtists = require(\"pages/product/aboutArtists\");\nvar _aboutArtistsDefault = parcelHelpers.interopDefault(_aboutArtists);\nvar _productAuthorDetails = require(\"pages/product/ProductAuthorDetails\");\nvar _productAuthorDetailsDefault = parcelHelpers.interopDefault(_productAuthorDetails);\nvar _productDescription = require(\"pages/product/ProductDescription\");\nvar _productDescriptionDefault = parcelHelpers.interopDefault(_productDescription);\nvar _productLabels = require(\"pages/product/productLabels\");\nvar _productLabelsDefault = parcelHelpers.interopDefault(_productLabels);\nvar _productLayout = require(\"pages/product/ProductLayout\");\nvar _productLayoutDefault = parcelHelpers.interopDefault(_productLayout);\nvar _productLayoutContainer = require(\"pages/product/ProductLayoutContainer\");\nvar _productLayoutContainerDefault = parcelHelpers.interopDefault(_productLayoutContainer);\nvar _productTitle = require(\"pages/product/ProductTitle\");\nvar _productTitleDefault = parcelHelpers.interopDefault(_productTitle);\nvar _generateTitleText = require(\"utils/generateTitleText\");\nvar _generateTitleTextDefault = parcelHelpers.interopDefault(_generateTitleText);\nvar _withLoadQuery = require(\"utils/hocs/withLoadQuery\");\nvar _withLoadQueryDefault = parcelHelpers.interopDefault(_withLoadQuery);\nvar _setDocTitle = require(\"utils/setDocTitle\");\nvar _setDocTitleDefault = parcelHelpers.interopDefault(_setDocTitle);\nvar _sendAction = require(\"./SendAction\");\nvar _sendActionDefault = parcelHelpers.interopDefault(_sendAction);\nconst SendPage = (0, _withLoadQueryDefault.default)(({ nftsQuery: { queryRef } })=>{\n    const { nfts } = (0, _reactRelay.usePreloadedQuery)((0, _nftsQueryGraphqlDefault.default), queryRef);\n    const nft = nfts.edges.length > 0 ? nfts.edges[0].node : null;\n    const isCurrentUserTokenOwner = (0, _useProductOwnershipDefault.default)({\n        nft\n    });\n    const { showRankedAuctionTimer, showProductAuctionTimer, showDropsTimer, onProductTimerEnd } = (0, _useProductTimersDefault.default)(nft);\n    (0, _react.useEffect)(()=>{\n        if (!nft?.metadata?.title) return;\n        (0, _setDocTitleDefault.default)(`Send ${(0, _generateTitleTextDefault.default)(nft)} | ${(0, _utils.APP_NAME)}`);\n    }, [\n        nft,\n        nft?.metadata?.title\n    ]);\n    if (!nft || !isCurrentUserTokenOwner) throw new (0, _fourOFourErrorDefault.default)();\n    return /*#__PURE__*/ (0, _jsxRuntime.jsx)((0, _productLayoutContainerDefault.default), {\n        children: /*#__PURE__*/ (0, _jsxRuntime.jsx)((0, _productLayoutDefault.default), {\n            nftMetadata: nft.metadata,\n            children: /*#__PURE__*/ (0, _jsxRuntime.jsxs)((0, _jsxRuntime.Fragment), {\n                children: [\n                    /*#__PURE__*/ (0, _jsxRuntime.jsx)((0, _productTitleDefault.default), {\n                        title: (0, _generateTitleTextDefault.default)(nft)\n                    }),\n                    /*#__PURE__*/ (0, _jsxRuntime.jsx)((0, _productAuthorDetailsDefault.default), {\n                        author: nft.metadata.author,\n                        collaborators: nft.metadata.collaborators,\n                        collection: nft.metadata.nftCollection\n                    }),\n                    /*#__PURE__*/ (0, _jsxRuntime.jsx)((0, _productLabelsDefault.default), {\n                        nft: nft,\n                        showDropsTimer: showDropsTimer,\n                        showProductAuctionTimer: showProductAuctionTimer,\n                        showRankedAuctionTimer: showRankedAuctionTimer,\n                        onProductTimerEnd: onProductTimerEnd,\n                        children: /*#__PURE__*/ (0, _jsxRuntime.jsx)((0, _sendActionDefault.default), {\n                            nft: nft\n                        })\n                    }),\n                    /*#__PURE__*/ (0, _jsxRuntime.jsx)((0, _aboutArtistsDefault.default), {\n                        author: nft.metadata.author,\n                        collaborators: nft.metadata.collaborators\n                    }),\n                    /*#__PURE__*/ (0, _jsxRuntime.jsx)((0, _productDescriptionDefault.default), {\n                        title: \"Description\",\n                        description: nft.metadata.description,\n                        collapsible: false,\n                        videoUrl: nft.metadata.descriptionVideoUrl,\n                        videoPreviewImageUrl: nft.metadata.descriptionImageUrl\n                    })\n                ]\n            })\n        })\n    });\n}, {\n    nftsQuery: {\n        concreteRequest: (0, _nftsQueryGraphqlDefault.default)\n    }\n});\nfunction SendPageWrapper() {\n    const { nftSlug } = (0, _reactRouterDom.useParams)();\n    return /*#__PURE__*/ (0, _jsxRuntime.jsx)((0, _pageErrorBoundaryDefault.default), {\n        children: /*#__PURE__*/ (0, _jsxRuntime.jsx)(SendPage, {\n            nftsQuery: {\n                variables: {\n                    first: 1,\n                    productSlug: nftSlug\n                }\n            }\n        })\n    });\n}\n\n},{\"react/jsx-runtime\":\"dAtyg\",\"react\":\"aUO8W\",\"react-relay\":\"yZlBg\",\"react-router-dom\":\"gGaRm\",\"graphql/__generated__/NFTsQuery.graphql\":\"8CCzD\",\"components/ErrorBoundaries/PageErrorBoundary\":\"2HR2h\",\"constants/Utils\":\"8Rx9u\",\"errors/FourOFourError\":\"hTvVd\",\"hooks/product/useProductOwnership\":\"jfI8M\",\"hooks/product/useProductTimers\":\"fNe6H\",\"pages/product/aboutArtists\":\"e1u5D\",\"pages/product/ProductAuthorDetails\":\"3RUWU\",\"pages/product/ProductDescription\":\"gzUj2\",\"pages/product/productLabels\":\"27QWG\",\"pages/product/ProductLayout\":\"960t1\",\"pages/product/ProductLayoutContainer\":\"kjQer\",\"pages/product/ProductTitle\":\"9nXJT\",\"utils/generateTitleText\":\"go1xh\",\"utils/hocs/withLoadQuery\":\"1mYad\",\"utils/setDocTitle\":\"e2EM3\",\"./SendAction\":\"ecrpO\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"4ZCo7\"}],\"ecrpO\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"default\", ()=>SendAction);\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _react = require(\"react\");\nvar _coreComponents = require(\"@mp-frontend/core-components\");\nvar _coreUtils = require(\"@mp-frontend/core-utils\");\nvar _congratulationDialog = require(\"components/dialogs/CongratulationDialog\");\nvar _congratulationDialogDefault = parcelHelpers.interopDefault(_congratulationDialog);\nvar _loginRequiredButton = require(\"components/LoginRequiredButton\");\nvar _loginRequiredButtonDefault = parcelHelpers.interopDefault(_loginRequiredButton);\nvar _gap = require(\"types/enums/css/Gap\");\nvar _gapDefault = parcelHelpers.interopDefault(_gap);\nvar _global = require(\"types/enums/css/Global\");\nvar _globalDefault = parcelHelpers.interopDefault(_global);\nvar _margin = require(\"types/enums/css/Margin\");\nvar _marginDefault = parcelHelpers.interopDefault(_margin);\nvar _sendDialog = require(\"./SendDialog\");\nvar _sendDialogDefault = parcelHelpers.interopDefault(_sendDialog);\nfunction SendAction({ nft }) {\n    const [showDialog, setShowDialog] = (0, _react.useState)(false);\n    const [successfulTransactionHash, setSuccessfulTransactionHash] = (0, _react.useState)(null);\n    return /*#__PURE__*/ (0, _jsxRuntime.jsxs)((0, _jsxRuntime.Fragment), {\n        children: [\n            !!showDialog && /*#__PURE__*/ (0, _jsxRuntime.jsx)((0, _sendDialogDefault.default), {\n                nft: nft,\n                onClose: ()=>setShowDialog(false),\n                onCompleted: (transactionHash)=>{\n                    setShowDialog(false);\n                    setSuccessfulTransactionHash(transactionHash);\n                }\n            }),\n            !!successfulTransactionHash && /*#__PURE__*/ (0, _jsxRuntime.jsx)((0, _congratulationDialogDefault.default), {\n                open: true,\n                title: null,\n                onClose: ()=>setSuccessfulTransactionHash(null),\n                children: /*#__PURE__*/ (0, _jsxRuntime.jsxs)(\"div\", {\n                    className: (0, _coreUtils.joinClasses)((0, _globalDefault.default).Flex.CenteredCol, (0, _gapDefault.default)[32], (0, _globalDefault.default).Cursor.Default),\n                    children: [\n                        /*#__PURE__*/ (0, _jsxRuntime.jsx)(\"div\", {\n                            className: (0, _coreUtils.joinClasses)(\"centerText\", (0, _coreComponents.MPFonts).headline3),\n                            children: \"Congratulations\"\n                        }),\n                        /*#__PURE__*/ (0, _jsxRuntime.jsx)(\"div\", {\n                            className: (0, _coreUtils.joinClasses)(\"centerText\", (0, _coreComponents.MPFonts).textNormalMedium, (0, _coreComponents.MPColorClass).SolidNeutralGray5),\n                            style: {\n                                maxWidth: \"250px\"\n                            },\n                            children: \"This artwork was sent to the recipient's address successfully.\"\n                        }),\n                        /*#__PURE__*/ (0, _jsxRuntime.jsx)((0, _coreComponents.MPActionButton), {\n                            className: (0, _marginDefault.default).TOP[32],\n                            size: \"large\",\n                            sx: {\n                                minWidth: \"235px\"\n                            },\n                            onClick: ()=>setSuccessfulTransactionHash(null),\n                            children: \"Continue\"\n                        })\n                    ]\n                })\n            }),\n            /*#__PURE__*/ (0, _jsxRuntime.jsx)((0, _loginRequiredButtonDefault.default), {\n                className: (0, _marginDefault.default).BOTTOM[32],\n                onClick: ()=>setShowDialog(true),\n                size: \"large\",\n                children: \"Send\"\n            })\n        ]\n    });\n}\n\n},{\"react/jsx-runtime\":\"dAtyg\",\"react\":\"aUO8W\",\"@mp-frontend/core-components\":\"fKHhM\",\"@mp-frontend/core-utils\":\"aSZdq\",\"components/dialogs/CongratulationDialog\":\"4S0Pu\",\"components/LoginRequiredButton\":\"cUDCy\",\"types/enums/css/Gap\":\"7WqyU\",\"types/enums/css/Global\":\"iwgmB\",\"types/enums/css/Margin\":\"1lqKR\",\"./SendDialog\":\"cGx1V\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"4ZCo7\"}],\"cGx1V\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"default\", ()=>SendDialog);\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _react = require(\"react\");\nvar _ethers = require(\"ethers\");\nvar _reactRouterDom = require(\"react-router-dom\");\nvar _coreComponents = require(\"@mp-frontend/core-components\");\nvar _coreUtils = require(\"@mp-frontend/core-utils\");\nvar _standardDialog = require(\"components/dialogs/StandardDialog\");\nvar _standardDialogDefault = parcelHelpers.interopDefault(_standardDialog);\nvar _walletActionButton = require(\"components/WalletActionButton\");\nvar _walletActionButtonDefault = parcelHelpers.interopDefault(_walletActionButton);\nvar _routes = require(\"constants/Routes\");\nvar _routesDefault = parcelHelpers.interopDefault(_routes);\nvar _useTokenContract = require(\"hooks/contracts/useTokenContract\");\nvar _useTokenContractDefault = parcelHelpers.interopDefault(_useTokenContract);\nvar _usePaymentFormState = require(\"hooks/product/usePaymentFormState\");\nvar _productPendingOnChain = require(\"pages/product/ProductPendingOnChain\");\nvar _productPendingOnChainDefault = parcelHelpers.interopDefault(_productPendingOnChain);\nvar _walletConnection = require(\"pages/product/purchaseOfferDialog/WalletConnection\");\nvar _walletConnectionDefault = parcelHelpers.interopDefault(_walletConnection);\nvar _gap = require(\"types/enums/css/Gap\");\nvar _gapDefault = parcelHelpers.interopDefault(_gap);\nvar _global = require(\"types/enums/css/Global\");\nvar _globalDefault = parcelHelpers.interopDefault(_global);\nvar _areSameAddress = require(\"utils/areSameAddress\");\nfunction SendDialog({ nft, onClose, onCompleted }) {\n    const [recipientWallet, setRecipientWallet] = (0, _react.useState)(\"\");\n    const [recipientWalletError, setRecipientWalletError] = (0, _react.useState)(\"\");\n    const [recipientEmail, setRecipientEmail] = (0, _react.useState)(\"\");\n    const [recipientEmailError, setRecipientEmailError] = (0, _react.useState)(\"\");\n    const [senderMessage, setSenderMessage] = (0, _react.useState)(\"\");\n    const [isLoading, setIsLoading] = (0, _react.useState)(false);\n    const [transactionHash, setTransactionHash] = (0, _react.useState)(\"\");\n    const walletConnectionState = (0, _usePaymentFormState.useWalletConnectionState)();\n    const toAddressRef = (0, _react.useRef)();\n    const { useSafeTransferFrom } = (0, _useTokenContractDefault.default)({\n        abi: JSON.parse(nft.contract.abidata).abi,\n        contractAddress: nft.contract.address\n    });\n    const tokenContractManager = useSafeTransferFrom({\n        fromAddress: nft.currentOwnerAddress,\n        toAddress: toAddressRef.current,\n        tokenId: parseInt(nft.onchainId, 10)\n    });\n    const handleWalletChange = (0, _react.useCallback)((event)=>{\n        const value = event.target.value.trim();\n        let error = \"\";\n        if (!value) error = \"Wallet address is required\";\n        else if (!(0, _ethers.ethers).utils.isAddress(value)) error = \"Invalid wallet address\";\n        else if ((0, _areSameAddress.areSameAddress)(value, nft.currentOwnerAddress)) error = \"You cannot send to yourself\";\n        setRecipientWalletError(error);\n        setRecipientWallet(value);\n        if (!error) toAddressRef.current = value;\n    }, [\n        nft.currentOwnerAddress\n    ]);\n    const handleEmailChange = (0, _react.useCallback)((event)=>{\n        const value = event.target.value.trim();\n        let error = \"\";\n        if (value && !/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(value)) error = \"Invalid email address\";\n        setRecipientEmailError(error);\n        setRecipientEmail(event.target.value);\n    }, []);\n    const handleSubmit = (0, _react.useCallback)(async ()=>{\n        try {\n            setIsLoading(true);\n            const validationResult = {\n                success: true\n            }; // TODO: implement validation\n            if (!validationResult.success) throw new Error(\"Count not validate the transaction.\");\n            const transactionResult = await tokenContractManager.mutate.writeAsync();\n            const creationResult = {\n                success: true\n            }; // TODO: implement creation\n            if (!creationResult.success) throw new Error(\"Count not send the artwork.\");\n            setTransactionHash(transactionResult);\n        } catch (e) {\n        // TODO: (Nikita) this should be fleshed out\n        }\n        setIsLoading(false);\n    /* eslint-disable-next-line react-hooks/exhaustive-deps */ }, [\n        tokenContractManager.mutate.writeAsync\n    ]);\n    return /*#__PURE__*/ (0, _jsxRuntime.jsx)((0, _standardDialogDefault.default), {\n        title: \"Send Artwork\",\n        actionButton: !transactionHash ? /*#__PURE__*/ (0, _jsxRuntime.jsx)((0, _walletActionButtonDefault.default), {\n            disabled: !!(!recipientWallet || recipientWalletError || recipientEmailError || isLoading),\n            size: \"large\",\n            onClick: handleSubmit,\n            children: \"Send\"\n        }) : null,\n        onClose: onClose,\n        children: transactionHash ? /*#__PURE__*/ (0, _jsxRuntime.jsx)((0, _productPendingOnChainDefault.default), {\n            queryVariables: {\n                txtId: transactionHash\n            },\n            onSuccess: ()=>onCompleted(transactionHash)\n        }) : walletConnectionState.isConnected ? /*#__PURE__*/ (0, _jsxRuntime.jsxs)(\"div\", {\n            className: (0, _coreUtils.joinClasses)((0, _globalDefault.default).Flex.Col, (0, _globalDefault.default).Cursor.Default, (0, _gapDefault.default)[24]),\n            children: [\n                /*#__PURE__*/ (0, _jsxRuntime.jsxs)(\"div\", {\n                    className: (0, _coreUtils.joinClasses)((0, _globalDefault.default).Flex.Col, (0, _gapDefault.default)[16]),\n                    children: [\n                        /*#__PURE__*/ (0, _jsxRuntime.jsx)((0, _coreComponents.MPStyledTextField), {\n                            label: \"Recipient's wallet address\",\n                            placeholder: \"Wallet address\",\n                            value: recipientWallet,\n                            error: recipientWalletError,\n                            onChange: handleWalletChange\n                        }),\n                        /*#__PURE__*/ (0, _jsxRuntime.jsx)((0, _coreComponents.MPStyledTextField), {\n                            label: \"Recipient's email address\",\n                            placeholder: \"Email address (optional)\",\n                            value: recipientEmail,\n                            error: recipientEmailError,\n                            className: (0, _globalDefault.default).Hidden,\n                            onChange: handleEmailChange\n                        }),\n                        /*#__PURE__*/ (0, _jsxRuntime.jsx)((0, _coreComponents.MPStyledTextField), {\n                            label: \"Your message to recipient\",\n                            placeholder: \"Let the recipient know when they receive your creation by including a message in your email (optional)\",\n                            value: senderMessage,\n                            onChange: (event)=>setSenderMessage(event.target.value),\n                            type: \"text\",\n                            minRows: 5,\n                            className: (0, _globalDefault.default).Hidden\n                        })\n                    ]\n                }),\n                /*#__PURE__*/ (0, _jsxRuntime.jsx)((0, _coreComponents.MPDivider), {}),\n                /*#__PURE__*/ (0, _jsxRuntime.jsxs)(\"div\", {\n                    className: (0, _coreComponents.MPFonts).paragraphSmall,\n                    children: [\n                        \"Send to any Ethereum digital wallet address.\",\n                        \" \",\n                        /*#__PURE__*/ (0, _jsxRuntime.jsx)((0, _reactRouterDom.Link), {\n                            to: (0, _routesDefault.default).FAQ.HOW_TO_SEND_CREATION(),\n                            reloadDocument: true,\n                            target: \"_blank\",\n                            className: \"defaultLink\",\n                            children: \"Learn more about how to send.\"\n                        })\n                    ]\n                })\n            ]\n        }) : /*#__PURE__*/ (0, _jsxRuntime.jsx)((0, _walletConnectionDefault.default), {})\n    });\n}\n\n},{\"react/jsx-runtime\":\"dAtyg\",\"react\":\"aUO8W\",\"ethers\":\"cKrQc\",\"react-router-dom\":\"gGaRm\",\"@mp-frontend/core-components\":\"fKHhM\",\"@mp-frontend/core-utils\":\"aSZdq\",\"components/dialogs/StandardDialog\":\"gaInT\",\"components/WalletActionButton\":\"9CK9I\",\"constants/Routes\":\"hp1p9\",\"hooks/contracts/useTokenContract\":\"ipCjA\",\"hooks/product/usePaymentFormState\":\"8BEPs\",\"pages/product/ProductPendingOnChain\":\"8Ej8b\",\"pages/product/purchaseOfferDialog/WalletConnection\":\"hs4kb\",\"types/enums/css/Gap\":\"7WqyU\",\"types/enums/css/Global\":\"iwgmB\",\"utils/areSameAddress\":\"dQyeO\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"4ZCo7\"}]},[], null, \"parcelRequire26b5\")\n\n//# sourceMappingURL=SendPage.c71dd9d1.js.map\n","import { useEffect } from 'react';\nimport { usePreloadedQuery } from 'react-relay';\nimport { useParams } from 'react-router-dom';\n\nimport NFTsQueryRequest, {\n  NFTsQuery,\n} from 'graphql/__generated__/NFTsQuery.graphql';\n\nimport PageErrorBoundary from 'components/ErrorBoundaries/PageErrorBoundary';\nimport { APP_NAME } from 'constants/Utils';\nimport FourOFourError from 'errors/FourOFourError';\nimport useProductOwnership from 'hooks/product/useProductOwnership';\nimport useProductTimers from 'hooks/product/useProductTimers';\nimport ProductAboutArtists from 'pages/product/aboutArtists';\nimport ProductAuthorDetails from 'pages/product/ProductAuthorDetails';\nimport ProductDescription from 'pages/product/ProductDescription';\nimport ProductLabels from 'pages/product/productLabels';\nimport ProductLayout from 'pages/product/ProductLayout';\nimport ProductLayoutContainer from 'pages/product/ProductLayoutContainer';\nimport ProductTitle from 'pages/product/ProductTitle';\nimport generateTitleText from 'utils/generateTitleText';\nimport withLoadQuery, { WithLoadQueryProps } from 'utils/hocs/withLoadQuery';\nimport setDocTitle from 'utils/setDocTitle';\n\nimport SendAction from './SendAction';\n\ninterface SendParams {\n  nftsQuery: WithLoadQueryProps<NFTsQuery>;\n}\n\nconst SendPage = withLoadQuery(\n  ({ nftsQuery: { queryRef } }: SendParams) => {\n    const { nfts } = usePreloadedQuery<NFTsQuery>(NFTsQueryRequest, queryRef);\n    const nft = nfts.edges.length > 0 ? nfts.edges[0].node : null;\n\n    const isCurrentUserTokenOwner = useProductOwnership({ nft });\n    const {\n      showRankedAuctionTimer,\n      showProductAuctionTimer,\n      showDropsTimer,\n      onProductTimerEnd,\n    } = useProductTimers(nft);\n\n    useEffect(() => {\n      if (!nft?.metadata?.title) return;\n\n      setDocTitle(`Send ${generateTitleText(nft)} | ${APP_NAME}`);\n    }, [nft, nft?.metadata?.title]);\n\n    if (!nft || !isCurrentUserTokenOwner) throw new FourOFourError();\n\n    return (\n      <ProductLayoutContainer>\n        <ProductLayout nftMetadata={nft.metadata}>\n          <>\n            <ProductTitle title={generateTitleText(nft)} />\n            <ProductAuthorDetails\n              author={nft.metadata.author}\n              collaborators={nft.metadata.collaborators}\n              collection={nft.metadata.nftCollection}\n            />\n            <ProductLabels\n              nft={nft}\n              showDropsTimer={showDropsTimer}\n              showProductAuctionTimer={showProductAuctionTimer}\n              showRankedAuctionTimer={showRankedAuctionTimer}\n              onProductTimerEnd={onProductTimerEnd}\n            >\n              <SendAction nft={nft} />\n            </ProductLabels>\n            <ProductAboutArtists\n              author={nft.metadata.author}\n              collaborators={nft.metadata.collaborators}\n            />\n            <ProductDescription\n              title=\"Description\"\n              description={nft.metadata.description}\n              collapsible={false}\n              videoUrl={nft.metadata.descriptionVideoUrl}\n              videoPreviewImageUrl={nft.metadata.descriptionImageUrl}\n            />\n          </>\n        </ProductLayout>\n      </ProductLayoutContainer>\n    );\n  },\n  {\n    nftsQuery: { concreteRequest: NFTsQueryRequest },\n  }\n);\n\nexport default function SendPageWrapper() {\n  const { nftSlug } = useParams();\n\n  return (\n    <PageErrorBoundary>\n      <SendPage nftsQuery={{ variables: { first: 1, productSlug: nftSlug } }} />\n    </PageErrorBoundary>\n  );\n}\n","import { useState } from 'react';\n\nimport {\n  MPActionButton,\n  MPColorClass,\n  MPFonts,\n} from '@mp-frontend/core-components';\nimport { joinClasses } from '@mp-frontend/core-utils';\n\nimport CongratulationDialog from 'components/dialogs/CongratulationDialog';\nimport LoginRequiredButton from 'components/LoginRequiredButton';\nimport CSSGap from 'types/enums/css/Gap';\nimport CSSGlobal from 'types/enums/css/Global';\nimport CSSMargin from 'types/enums/css/Margin';\nimport { NFTType } from 'types/graphql/NFT';\n\nimport SendDialog from './SendDialog';\n\ninterface SendActionProps {\n  nft: NFTType;\n}\n\nexport default function SendAction({ nft }: SendActionProps) {\n  const [showDialog, setShowDialog] = useState<boolean>(false);\n  const [successfulTransactionHash, setSuccessfulTransactionHash] =\n    useState<string>(null);\n\n  return (\n    <>\n      {!!showDialog && (\n        <SendDialog\n          nft={nft}\n          onClose={() => setShowDialog(false)}\n          onCompleted={(transactionHash) => {\n            setShowDialog(false);\n            setSuccessfulTransactionHash(transactionHash);\n          }}\n        />\n      )}\n      {!!successfulTransactionHash && (\n        <CongratulationDialog\n          open\n          title={null}\n          onClose={() => setSuccessfulTransactionHash(null)}\n        >\n          <div\n            className={joinClasses(\n              CSSGlobal.Flex.CenteredCol,\n              CSSGap[32],\n              CSSGlobal.Cursor.Default\n            )}\n          >\n            <div className={joinClasses('centerText', MPFonts.headline3)}>\n              Congratulations\n            </div>\n\n            <div\n              className={joinClasses(\n                'centerText',\n                MPFonts.textNormalMedium,\n                MPColorClass.SolidNeutralGray5\n              )}\n              style={{ maxWidth: '250px' }}\n            >\n              This artwork was sent to the recipient&apos;s address\n              successfully.\n            </div>\n\n            <MPActionButton\n              className={CSSMargin.TOP[32]}\n              size=\"large\"\n              sx={{ minWidth: '235px' }}\n              onClick={() => setSuccessfulTransactionHash(null)}\n            >\n              Continue\n            </MPActionButton>\n          </div>\n        </CongratulationDialog>\n      )}\n\n      <LoginRequiredButton\n        className={CSSMargin.BOTTOM[32]}\n        onClick={() => setShowDialog(true)}\n        size=\"large\"\n      >\n        Send\n      </LoginRequiredButton>\n    </>\n  );\n}\n","import { ChangeEvent, useCallback, useRef, useState } from 'react';\nimport { ethers } from 'ethers';\nimport { Link } from 'react-router-dom';\n\nimport {\n  MPDivider,\n  MPFonts,\n  MPStyledTextField,\n} from '@mp-frontend/core-components';\nimport { joinClasses } from '@mp-frontend/core-utils';\n\nimport StandardDialog, {\n  StandardDialogProps,\n} from 'components/dialogs/StandardDialog';\nimport WalletActionButton from 'components/WalletActionButton';\nimport ROUTES from 'constants/Routes';\nimport useTokenContract from 'hooks/contracts/useTokenContract';\nimport { useWalletConnectionState } from 'hooks/product/usePaymentFormState';\nimport ProductPendingOnChain from 'pages/product/ProductPendingOnChain';\nimport WalletConnection from 'pages/product/purchaseOfferDialog/WalletConnection';\nimport CSSGap from 'types/enums/css/Gap';\nimport CSSGlobal from 'types/enums/css/Global';\nimport { NFTType } from 'types/graphql/NFT';\nimport { areSameAddress } from 'utils/areSameAddress';\nimport { HexString } from 'utils/jwt/walletUtils';\n\ninterface SendDialogProps {\n  nft: NFTType;\n  onClose: StandardDialogProps['onClose'];\n  onCompleted: (transactionHash: string) => void;\n}\n\nexport default function SendDialog({\n  nft,\n  onClose,\n  onCompleted,\n}: SendDialogProps) {\n  const [recipientWallet, setRecipientWallet] = useState<string>('');\n  const [recipientWalletError, setRecipientWalletError] = useState<string>('');\n  const [recipientEmail, setRecipientEmail] = useState<string>('');\n  const [recipientEmailError, setRecipientEmailError] = useState<string>('');\n  const [senderMessage, setSenderMessage] = useState<string>('');\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [transactionHash, setTransactionHash] = useState<string>('');\n  const walletConnectionState = useWalletConnectionState();\n\n  const toAddressRef = useRef<HexString>();\n\n  const { useSafeTransferFrom } = useTokenContract({\n    abi: JSON.parse(nft.contract.abidata).abi,\n    contractAddress: nft.contract.address as HexString,\n  });\n\n  const tokenContractManager = useSafeTransferFrom({\n    fromAddress: nft.currentOwnerAddress as HexString,\n    toAddress: toAddressRef.current,\n    tokenId: parseInt(nft.onchainId, 10),\n  });\n\n  const handleWalletChange = useCallback(\n    (event: ChangeEvent<HTMLInputElement>) => {\n      const value = event.target.value.trim();\n      let error = '';\n      if (!value) {\n        error = 'Wallet address is required';\n      } else if (!ethers.utils.isAddress(value)) {\n        error = 'Invalid wallet address';\n      } else if (\n        areSameAddress(value as HexString, nft.currentOwnerAddress as HexString)\n      ) {\n        error = 'You cannot send to yourself';\n      }\n\n      setRecipientWalletError(error);\n      setRecipientWallet(value);\n\n      if (!error) {\n        toAddressRef.current = value as HexString;\n      }\n    },\n    [nft.currentOwnerAddress]\n  );\n  const handleEmailChange = useCallback(\n    (event: ChangeEvent<HTMLInputElement>) => {\n      const value = event.target.value.trim();\n      let error = '';\n      if (value && !/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(value)) {\n        error = 'Invalid email address';\n      }\n\n      setRecipientEmailError(error);\n      setRecipientEmail(event.target.value);\n    },\n    []\n  );\n  const handleSubmit = useCallback(async () => {\n    try {\n      setIsLoading(true);\n\n      const validationResult = { success: true }; // TODO: implement validation\n      if (!validationResult.success) {\n        throw new Error('Count not validate the transaction.');\n      }\n\n      const transactionResult = await tokenContractManager.mutate.writeAsync();\n\n      const creationResult = { success: true }; // TODO: implement creation\n      if (!creationResult.success) {\n        throw new Error('Count not send the artwork.');\n      }\n\n      setTransactionHash(transactionResult);\n    } catch (e) {\n      // TODO: (Nikita) this should be fleshed out\n    }\n    setIsLoading(false);\n    /* eslint-disable-next-line react-hooks/exhaustive-deps */\n  }, [tokenContractManager.mutate.writeAsync]);\n\n  return (\n    <StandardDialog\n      title=\"Send Artwork\"\n      actionButton={\n        !transactionHash ? (\n          <WalletActionButton\n            disabled={\n              !!(\n                !recipientWallet ||\n                recipientWalletError ||\n                recipientEmailError ||\n                isLoading\n              )\n            }\n            size=\"large\"\n            onClick={handleSubmit}\n          >\n            Send\n          </WalletActionButton>\n        ) : null\n      }\n      onClose={onClose}\n    >\n      {transactionHash ? (\n        <ProductPendingOnChain\n          queryVariables={{ txtId: transactionHash }}\n          onSuccess={() => onCompleted(transactionHash)}\n        />\n      ) : walletConnectionState.isConnected ? (\n        <div\n          className={joinClasses(\n            CSSGlobal.Flex.Col,\n            CSSGlobal.Cursor.Default,\n            CSSGap[24]\n          )}\n        >\n          <div className={joinClasses(CSSGlobal.Flex.Col, CSSGap[16])}>\n            <MPStyledTextField\n              label=\"Recipient's wallet address\"\n              placeholder=\"Wallet address\"\n              value={recipientWallet}\n              error={recipientWalletError}\n              onChange={handleWalletChange}\n            />\n            <MPStyledTextField\n              label=\"Recipient's email address\"\n              placeholder=\"Email address (optional)\"\n              value={recipientEmail}\n              error={recipientEmailError}\n              className={CSSGlobal.Hidden} // TODO: Hook up to backend or remove\n              onChange={handleEmailChange}\n            />\n            <MPStyledTextField\n              label=\"Your message to recipient\"\n              placeholder=\"Let the recipient know when they receive your creation by including a message in your email (optional)\"\n              value={senderMessage}\n              onChange={(event) => setSenderMessage(event.target.value)}\n              type=\"text\"\n              minRows={5}\n              className={CSSGlobal.Hidden} // TODO: Hook up to backend or remove\n            />\n          </div>\n\n          <MPDivider />\n\n          <div className={MPFonts.paragraphSmall}>\n            Send to any Ethereum digital wallet address.{' '}\n            <Link\n              to={ROUTES.FAQ.HOW_TO_SEND_CREATION()}\n              reloadDocument\n              target=\"_blank\"\n              className=\"defaultLink\"\n            >\n              Learn more about how to send.\n            </Link>\n          </div>\n        </div>\n      ) : (\n        <WalletConnection />\n      )}\n    </StandardDialog>\n  );\n}\n"],"names":["modules","entry","mainEntry","parcelRequireName","globalName","globalObject","globalThis","self","window","global","previousRequire","cache","nodeRequire","module","require","bind","newRequire","name","jumped","currentRequire","err","Error","code","localRequire","resolve","x","id","Module","call","exports","res","isParcelRequire","moduleName","bundle","parent","register","Object","defineProperty","get","i","length","parcelHelpers","defineInteropFlag","export","SendPageWrapper","_jsxRuntime","_react","_reactRelay","_reactRouterDom","_nftsQueryGraphql","_nftsQueryGraphqlDefault","interopDefault","_pageErrorBoundary","_pageErrorBoundaryDefault","_utils","_fourOFourError","_fourOFourErrorDefault","_useProductOwnership","_useProductOwnershipDefault","_useProductTimers","_useProductTimersDefault","_aboutArtists","_aboutArtistsDefault","_productAuthorDetails","_productAuthorDetailsDefault","_productDescription","_productDescriptionDefault","_productLabels","_productLabelsDefault","_productLayout","_productLayoutDefault","_productLayoutContainer","_productLayoutContainerDefault","_productTitle","_productTitleDefault","_generateTitleText","_generateTitleTextDefault","_withLoadQuery","_withLoadQueryDefault","_setDocTitle","_setDocTitleDefault","_sendAction","_sendActionDefault","SendPage","default","nftsQuery","queryRef","nfts","usePreloadedQuery","nft","edges","node","isCurrentUserTokenOwner","showRankedAuctionTimer","showProductAuctionTimer","showDropsTimer","onProductTimerEnd","useEffect","metadata","title","APP_NAME","jsx","children","nftMetadata","jsxs","Fragment","author","collaborators","collection","nftCollection","description","collapsible","videoUrl","descriptionVideoUrl","videoPreviewImageUrl","descriptionImageUrl","concreteRequest","nftSlug","useParams","variables","first","productSlug","SendAction","_coreComponents","_coreUtils","_congratulationDialog","_congratulationDialogDefault","_loginRequiredButton","_loginRequiredButtonDefault","_gap","_gapDefault","_global","_globalDefault","_margin","_marginDefault","_sendDialog","_sendDialogDefault","showDialog","setShowDialog","useState","successfulTransactionHash","setSuccessfulTransactionHash","onClose","onCompleted","transactionHash","open","className","joinClasses","Flex","CenteredCol","Cursor","Default","MPFonts","headline3","textNormalMedium","MPColorClass","SolidNeutralGray5","style","maxWidth","MPActionButton","TOP","size","sx","minWidth","onClick","BOTTOM","SendDialog","_ethers","_standardDialog","_standardDialogDefault","_walletActionButton","_walletActionButtonDefault","_routes","_routesDefault","_useTokenContract","_useTokenContractDefault","_usePaymentFormState","_productPendingOnChain","_productPendingOnChainDefault","_walletConnection","_walletConnectionDefault","_areSameAddress","recipientWallet","setRecipientWallet","recipientWalletError","setRecipientWalletError","recipientEmail","setRecipientEmail","recipientEmailError","setRecipientEmailError","senderMessage","setSenderMessage","isLoading","setIsLoading","setTransactionHash","walletConnectionState","useWalletConnectionState","toAddressRef","useRef","useSafeTransferFrom","abi","JSON","parse","contract","abidata","contractAddress","address","tokenContractManager","fromAddress","currentOwnerAddress","toAddress","current","tokenId","parseInt","onchainId","handleWalletChange","useCallback","event","value","target","trim","error","ethers","utils","isAddress","areSameAddress","handleEmailChange","test","handleSubmit","transactionResult","mutate","writeAsync","e","actionButton","disabled","queryVariables","txtId","onSuccess","isConnected","Col","MPStyledTextField","label","placeholder","onChange","Hidden","type","minRows","MPDivider","paragraphSmall","Link","to","FAQ","HOW_TO_SEND_CREATION","reloadDocument"],"version":3,"file":"SendPage.c71dd9d1.js.map"}